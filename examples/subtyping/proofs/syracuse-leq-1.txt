;; The proof (at each commit) will be displayed in this buffer

(start-term ((*syracuse-factory* (FUN n *int* *1*)) *int*))
(start-goal *1*)
(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *syracuse-factory* by (FUN obj top (y (FUN self 'obj (FUN n *int* (((*isOne* 'n) *1*) (((*isEven* 'n) ('self ((*div* 'n) *2*))) ('self (*succ* ((*mult* *3*) 'n)))))))))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN obj top (y (FUN self 'obj (FUN n *int* (((*isOne* 'n) *1*) (((*isEven* 'n) ('self ((*div* 'n) *2*))) ('self (*succ* ((*mult* *3*) 'n))))))))) (FUN n *int* *1*)) *int*) by ((y (FUN self (FUN n *int* *1*) (FUN n *int* (((*isOne* 'n) *1*) (((*isEven* 'n) ('self ((*div* 'n) *2*))) ('self (*succ* ((*mult* *3*) 'n)))))))) *int*)")
(rewrite promote :on-objectives nil :path (0 1 3 3 1 1 0) :desc "Promote to replace 'self by (FUN n *int* *1*)")
(rewrite promote :on-objectives nil :path (0 1 3 3 1 0 1 0) :desc "Promote to replace 'self by (FUN n *int* *1*)")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace ((y (FUN self (FUN n *int* *1*) (FUN n *int* (((*isOne* 'n) *1*) (((*isEven* 'n) ((FUN n *int* *1*) ((*div* 'n) *2*))) ((FUN n *int* *1*) (*succ* ((*mult* *3*) 'n)))))))) *int*) by ((y (FUN self (FUN n *int* *1*) (FUN n *int* (((*isOne* 'n) *1*) (((*isEven* 'n) *1*) *1*))))) *int*)")
(rewrite macro-expand :on-objectives nil :path (0 1 3 3 0 0 0) :desc "Macro expand to replace *isOne* by (FUN n *int* *bool*)")
(rewrite macro-expand :on-objectives nil :path (0 1 3 3 1 0 0 0) :desc "Macro expand to replace *isEven* by (FUN n *int* *bool*)")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace ((y (FUN self (FUN n *int* *1*) (FUN n *int* ((((FUN n *int* *bool*) 'n) *1*) ((((FUN n *int* *bool*) 'n) *1*) *1*))))) *int*) by ((y (FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*))))) *int*)")
(rewrite beta-substitute :on-objectives nil :path (0) :desc "Beta substitute to replace (y (FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*))))) by ((FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*)))) (y (FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*))))))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*)))) (y (FUN self (FUN n *int* *1*) (FUN n *int* ((*bool* *1*) ((*bool* *1*) *1*)))))) *int*) by ((*bool* *1*) ((*bool* *1*) *1*))")
(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *bool* by (OR *true* *false*)")
(rewrite macro-expand :on-objectives nil :path (1 0 0) :desc "Macro expand to replace *bool* by (OR *true* *false*)")
(rewrite split-or-all :on-objectives nil :path (0 0) :desc "Split OR to replace (OR *true* *false*) by *true*")
(rewrite split-or-all :on-objectives nil :path (1 0 0) :desc "Split OR to replace (OR *true* *false*) by *true*")
(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *true* by (FUN true-case top (FUN false-case top 'true-case))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN true-case top (FUN false-case top 'true-case)) *1*) ((*true* *1*) *1*)) by *1*")
(qed)
(commit)

(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *true* by (FUN true-case top (FUN false-case top 'true-case))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN true-case top (FUN false-case top 'true-case)) *1*) ((*false* *1*) *1*)) by *1*")
(qed)
(commit)

(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *false* by (FUN true-case top (FUN false-case top 'false-case))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN true-case top (FUN false-case top 'false-case)) *1*) (((OR *true* *false*) *1*) *1*)) by (((OR *true* *false*) *1*) *1*)")
(rewrite split-or-all :on-objectives nil :path (0 0) :desc "Split OR to replace (OR *true* *false*) by *true*")
(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *true* by (FUN true-case top (FUN false-case top 'true-case))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN true-case top (FUN false-case top 'true-case)) *1*) *1*) by *1*")
(qed)
(commit)

(rewrite macro-expand :on-objectives nil :path (0 0) :desc "Macro expand to replace *false* by (FUN true-case top (FUN false-case top 'false-case))")
(rewrite beta-substitute-all :on-objectives nil :path nil :desc "Beta substitute all to replace (((FUN true-case top (FUN false-case top 'false-case)) *1*) *1*) by *1*")
(qed)
(commit)

